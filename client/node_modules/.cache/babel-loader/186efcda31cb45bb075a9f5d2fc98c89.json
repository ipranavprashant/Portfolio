{"ast":null,"code":"var _jsxFileName = \"/Users/pranavprashant/Developer/Portfolio/client/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./FormStyles.css\"; // Import your CSS file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    message: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        // Handle successful form submission\n        console.log(\"Form submitted successfully!\");\n      } else {\n        // Handle error\n        console.error(\"Error submitting form.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handleClear = () => {\n    // Create an object with empty values for all form fields\n    const emptyFormData = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      message: \"\"\n    }; // Set the form data to the empty object\n\n    setFormData(emptyFormData);\n    alert(\"Thanks for getting in touch!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: formData.address,\n        onChange: handleChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"6\",\n        name: \"message\",\n        value: formData.message,\n        onChange: handleChange,\n        placeholder: \"Type your message here\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        onClick: handleClear,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"kSBUN783Bv9uZh/ALRAf7K7oXWU=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/pranavprashant/Developer/Portfolio/client/src/components/Form.js"],"names":["React","useState","Form","formData","setFormData","name","email","address","message","handleChange","e","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","handleClear","emptyFormData","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./FormStyles.css\"; // Import your CSS file\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"/contact\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (response.ok) {\r\n        // Handle successful form submission\r\n        console.log(\"Form submitted successfully!\");\r\n      } else {\r\n        // Handle error\r\n        console.error(\"Error submitting form.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    // Create an object with empty values for all form fields\r\n    const emptyFormData = {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      message: \"\",\r\n    };\r\n    \r\n    // Set the form data to the empty object\r\n    setFormData(emptyFormData);\r\n    alert(\"Thanks for getting in touch!\")\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          className=\"input-field\"\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          className=\"input-field\"\r\n        />\r\n        <label htmlFor=\"name\">Address</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          value={formData.address}\r\n          onChange={handleChange}\r\n          className=\"input-field\"\r\n        />\r\n        <label htmlFor=\"name\">Message</label>\r\n        <textarea\r\n          rows=\"6\"\r\n          name=\"message\"\r\n          value={formData.message}\r\n          onChange={handleChange}\r\n          placeholder=\"Type your message here\"\r\n          className=\"input-field\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\" onClick={handleClear}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}